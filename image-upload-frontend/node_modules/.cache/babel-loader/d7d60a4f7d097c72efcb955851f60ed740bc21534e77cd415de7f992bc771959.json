{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pannu\\\\OneDrive\\\\Desktop\\\\GitHub repos\\\\ImageUploadApp\\\\image-upload-frontend\\\\src\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await axios.post('http://localhost:5000/upload', formData);\n      fetchImages();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/images');\n      setImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  const handleDownload = blobName => {\n    window.open(`http://localhost:5000/download/${blobName}`, '_blank');\n  };\n  const handleDelete = async (blobName, imageId) => {\n    try {\n      await axios.delete(`http://localhost:5000/images/delete/${imageId}/${blobName}`);\n      fetchImages();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  console.log(images);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Images:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: images.map((url, index) => {\n        //const url = image.url;\n        const blobName = url.split('/').pop(); // Extract blob name from the URL\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: `uploaded-img-${index}`,\n            style: {\n              width: '200px',\n              border: '1px solid #ccc'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDownload(blobName),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(blobName, url),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"4n0TPqNawjfRs1acd435vE6OFnY=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HomePage","_s","file","setFile","images","setImages","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","fetchImages","error","console","response","get","data","handleDownload","blobName","window","open","handleDelete","imageId","delete","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","url","index","split","pop","style","margin","src","alt","width","border","_c","$RefreshReg$"],"sources":["C:/Users/pannu/OneDrive/Desktop/GitHub repos/ImageUploadApp/image-upload-frontend/src/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction HomePage() {\r\n  const [file, setFile] = useState(null);\r\n  const [images, setImages] = useState([]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      await axios.post('http://localhost:5000/upload', formData);\r\n      fetchImages();\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n    }\r\n  };\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/images');\r\n      setImages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching images:', error);\r\n    }\r\n  };\r\n\r\n  const handleDownload = (blobName) => {\r\n    window.open(`http://localhost:5000/download/${blobName}`, '_blank');\r\n  };\r\n\r\n  const handleDelete= async (blobName, imageId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/images/delete/${imageId}/${blobName}`);\r\n      fetchImages();\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\nconsole.log(images);\r\n  return (\r\n    <div>\r\n      <h1>Image Upload</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n      <h2>Uploaded Images:</h2>\r\n      <div>\r\n        {images.map((url, index) => {\r\n          //const url = image.url;\r\n          const blobName = url.split('/').pop(); // Extract blob name from the URL\r\n          return (\r\n            <div key={index} style={{ margin: '10px' }}>\r\n              <img src={url} alt={`uploaded-img-${index}`} style={{ width: '200px', border: '1px solid #ccc' }} />\r\n              <button onClick={() => handleDownload(blobName)}>Download</button>\r\n              <button onClick={() => handleDelete(blobName, url)}>Delete</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}